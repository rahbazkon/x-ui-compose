server {
    listen 443 ssl;
    listen [::]:443 ssl;
    
    # MIME
    include                mime.types;
    default_type           application/octet-stream;

    server_name           <DOMAIN>;
    ssl_certificate         /etc/letsencrypt/live/<DOMAIN>/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/<DOMAIN>/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/<DOMAIN>/chain.pem;
    
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;
    
    ssl_protocols         TLSv1.2 TLSv1.3;
    ssl_ciphers           ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    root /var/www/html;

    location /api { 
        if ($http_upgrade != "websocket") { 
            return 404;
        }

        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://icmp-client:1080/api;
    }

    location / {
        proxy_pass http://icmp-client:1080/;
    }
}

server {
    listen 80;
    listen [::]:80;
    
    server_name           <DOMAIN>;

    root /var/www/html;

    location /api { 
        if ($http_upgrade != "websocket") { 
            return 404;
        }

        proxy_redirect off; 
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://icmp-client:1080/;
    }

    location / {
        return 301 https://<DOMAIN>$request_uri;
    }
}